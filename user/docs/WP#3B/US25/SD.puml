@startuml
'https://plantuml.com/sequence-diagram
autonumber

title Sequence Diagram / As a Project Manager, I want to know the number of active subscriptions or canceled subscriptions in a specific month

actor "Project Manager/Financial director" as Ac
participant ":DashboardController" as Ctrl
participant ":DashboardService" as Serv
participant ":DashboardRepository" as Repo
participant ":PlansRepository" as RepoPlans
participant ":Plans" as Plans
participant ":DisplayRevenue" as Mapper
participant ":DashboardRevenueViewMapper" as View
participant ":generateMonthlyRevenues" as MonthlyRevenues
note over MonthlyRevenues
  Generates monthly revenues based
  on plan data and counts.
  Calculates total revenue for each
  month and adds it to the revenue list.
end note
participant ":updatePlanData" as UpdatePlanData
note over UpdatePlanData
  Updates the plan data with the calculated
  total revenue for a specific month and year.
  If the plan and month already exist, it
  updates the total revenue.
  Otherwise, it adds a new
  entry with the month and total revenue
  to the plan's revenue data.
  end note

Ac -> Ctrl: GET /dashboard/revenuePlan
Ctrl -> Serv: getMonthlyRevenuePlan(String plan, Integer numberMonth)

Serv -> Repo: getPaymentTypeAndPlanNameCounts(String startDate, String endDate)
note left
Search will create an object from Subscriptions
with planName, paymentType, startDate, and the number
of subscriptions for that plan.
end note
Repo --> Serv: results

Serv -> RepoPlans: findByName_Name(planName)
note left
Search will compare the planName from the obj
with the plan introduced by the user.
If it matches, it will return the revenue of
that plan; otherwise, it will return all revenues.
end note
RepoPlans --> Serv: planObj

alt (obj.paymentType == "monthly")
    Serv -> Plans: getMonthlyFee()
    Plans --> Serv: monthlyFee
else (obj.paymentType == "annually")
    Serv -> Plans: getAnnualFee()
    Plans --> Serv: annualFee
end

Serv -> MonthlyRevenues: generateMonthlyRevenues(planName, monthlyRevenue, dividedAnnualRevenue, numberMonth, monthsToAddRevenue, revenueList)
MonthlyRevenues --> Serv: -

Serv -> UpdatePlanData: updatePlanData(planName, monthKey, totalRevenue, year, df, revenueList)
UpdatePlanData --> Serv: -

Serv --> Ctrl: revenueList
Ctrl -> Mapper: toDashboardRevenueView(displayRevenue)
Mapper --> View: dashboardRevenueViews

Ac <-- View: show revenue
@enduml

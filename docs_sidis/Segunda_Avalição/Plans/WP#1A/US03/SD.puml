@startuml
'https://plantuml.com/sequence-diagram
autoactivate on
autonumber
title Sequence Diagram/  As marketing director, I want to change a plan’s details other than pricing

autonumber

actor "Marketing Director" as Ac
participant ":PlanController" as Ctrl
participant ":PlansService" as Serv
participant ":PlansRepository" as Repo
participant ":Plans" as Plan
participant ":PlansViewMapper" as View
participant ":PlanRequest" as Request
participant ":PlansMapperInverser" as ViewInverser



Ac -> Ctrl : PATCH /plans/update/{name}

Ctrl -> Serv :	Plans partialUpdate(String name, EditPlansRequest resource, long parseLong);

Serv -> Repo :Optional<Plans> plan = findByName_Name(resource.getName())
Repo --> Serv : plan
note left
1) Service will check if plan exists
2)If the plan doesn´t exist locally it does a
HTPP API Call to another instance
end note
deactivate Plan
alt Check if the Plan exist on other instances if plan==empty
Serv->Repo:updateNotLocal(resource,name,desiredVersion,auth)
Repo->Repo:getPlansFromOtherAPI(resource.getName())
Repo-->Repo: HTTP 200



Repo->Repo:doPlansPatchAPI(name,desiredVersion,json)
Repo-->Repo: HTTP 200
Repo -> Request :  gson.fromJson(responses.body(), PlanRequest.class)
Request-->Repo:PlanRequest planRequest
Repo -> ViewInverser : toPlansView(planRequest)
ViewInverser -->Repo: plan
Repo-->Serv:plan
end
alt If Plan exist in Local Machine
Serv -> Plan :plan.updateData(long desiredVersion, String description,Integer maximumNumberOfUsers,String numberOfMinutes ,Integer musicCollections,String musicSuggestions, Boolean active, Boolean promoted)
Serv -> Repo: save(plan)
Repo --> Serv: plan
end
Serv --> Ctrl: plan
Ctrl ->View: toPlansView(plan)
View -->Ctrl: planView
Ac <-- Ctrl : planView

@enduml
@startuml
'https://plantuml.com/class-diagram
hide circle
class SubscriptionsRepository <<interface>>

class Subscriptions {
    -startDate
    -endDate
    -paymentType
    -activeStatus
    -plan
    -user
}

class SubscriptionsController{
    changePlan(final request,  final String name,String authorizationToken):ResponseEntity<SubscriptionsView>
 }

class SubscriptionsViewMapper{
    +toSubscriptionsView(Subscription subscriptions):SubscriptionsView
}
interface SubscriptionsRepository
{
+findByActiveStatus_ActiveAndUser(Boolean true, String username): Optional<Subscriptions>
+save(S entity) : <S extends Subscriptions>
+getPlansFromOtherAPI(String name): HttpResponse<String>
+getUserFromOtherAPI(String name) : HttpResponse<String>
+getSubsFromOtherApi(String name,String auth) : HttpResponse<String>
+planExists(String plan,String auth,String resource): Subscriptions
+changePlan(newString,auth,name,desiredVersion)
}

class SubscriptionsService{
 +changePlan(long desiredVersion, String name, String auth):Subscriptions

}




SubscriptionsController ..> SubscriptionsService: uses >
SubscriptionsService ..> SubscriptionsRepository: uses >
SubscriptionsRepository ..> Subscriptions: < record
SubscriptionsController ..>SubscriptionsViewMapper: uses >
SubscriptionsController ..>SubscriptionsRepository: HTTP API Call <

@enduml



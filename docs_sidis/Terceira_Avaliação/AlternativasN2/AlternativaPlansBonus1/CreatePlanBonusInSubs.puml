@startuml
'https://plantuml.com/sequence-diagram
autoactivate on
autonumber
title  Create  a new Subscription Bonus

autonumber

actor "Client" as Ac
box "Plan Component Container"
participant ":PlanC" as Auth
participant ":PlanQ" as Auth2
end box

box "Subscriptions Component Container"
    participant ":SubC" as NewComp
    participant ":SubQ" as NewCompQ
end box
participant ":Message Broker" as Broker


Ac->Auth:POST /plans/createBonus
Auth->Auth:creates plan bonus
Auth->Auth:saves plan bonus
Auth->Broker:publish plan bonus

Auth-->Ac:202
deactivate Auth
deactivate Auth

...
Broker->NewComp:consumes(send_plan_to_sub_bonus,CreatePlanRequestBonus plansBonusName)
NewComp-> Auth2: getUserPlanInfo(String planName)

Auth2-->NewComp:info
note left
Http ou RabbitMQ msg
to getUserPlanInfo
end note
NewComp->NewComp:create
note right
ItÂ´s created a Unique Queue
send_plan_to_sub_bonus,so that
the just one SubC  consumes
the created PlanBonus
end note
NewComp->Broker:publish(create_sub_bonus,CreateSubsByRabbitRequest updatedSub)
Broker->NewComp:consumes(create_sub_bonus,CreateSubsByRabbitRequest updatedSub)
NewComp->NewComp:save(Subscription sub)
Broker->NewCompQ:consumes(create_sub_bonus,CreateSubsByRabbitRequest updatedSub)
NewCompQ->NewCompQ:save(Subscription sub)
deactivate Broker











@enduml

@startuml
'https://plantuml.com/sequence-diagram
autoactivate on
autonumber
title  Renew  a new Subscription

autonumber

actor "Client" as Ac

participant ":User" as User
database ":UserDB" as Udb

participant ":Subscription" as Auth
database ":SubscriptionHTTP" as SHTTP

database ":SubscriptionDB" as SDB
participant ":Subscription1" as Serv
participant ":Plan" as Plan
database ":PlanDB" as PDB
database ":PlanHTTP" as PHTTP
participant ":Plan1" as Plan1

Ac->User: POST public/login
User->Udb:checkLocal
Udb-->User:user
User-->User:generates JWT Token
User-->Ac:200

Ac->Auth:  PATCH /subscriptions/change/{name}
Auth->SHTTP: change

alt Subscription exists in the first Instance
SHTTP->SDB:checkSubExists
SDB-->SHTTP:subscriptions
alt Subscription doesn´t exist in the first instance
SHTTP->Serv:GET subscriptions/external/{username}
Serv-->SHTTP:200
note left
If sub does not exist
SubsHTTP trows: User does not have sub
--
If sub exist in other machine
SubsHTTP trows: Sub can only be changed in other machine
end note
end
SHTTP->Plan:GET /api/plans/{name}

alt Plan exist in the first instance
Plan->PDB:checkLocal
PDB-->Plan:200
alt Plan doesn´t exist in the first instance
Plan->PHTTP:checkInstance
PHTTP->Plan1:GET plans/external/{planName}

Plan1-->PHTTP:200
PHTTP-->Plan:200
note left
If plan does not exist
in at least one of both machines
Plan trows: Plan does exist
end note
end
end

Plan-->SHTTP:200
end

SHTTP-->Auth:sub

Auth->Auth:save
Auth-->Ac:200
@enduml
@startuml
'https://plantuml.com/class-diagram
hide circle
class SubscriptionsRepository <<interface>>
class UserRepository <<interface>>
class PlansRepository <<interface>>
class DeviceRepository <<interface>>

class Subscriptions {
    -startDate
    -endDate
    -paymentType
    -activeStatus
    +changePlan(long desiredVersion, Plans plan): void
}



class SubscriptionsViewMapper{
    +toSubscriptionsView(Subscription subscriptions):SubscriptionsView
}
class SubscriptionsController{
    +changePlan(final WebRequest request, final String name):ResponseEntity<SubscriptionsView>
    }
class SubscriptionsService{
 +changePlan(long desiredVersion, String name):Subscriptions

}


interface PlansRepository
{
+findByActive_ActiveAndName_Name(boolean active, String name_name)  : Optional<Plans>
}

interface UserRepository
{
+findById(Long objectId): Optional<User>
}

interface DeviceRepository
{
+countBySubscription(Subscriptions (Subscription subscriptions): int
}

interface SubscriptionsRepository
{
+findByActiveStatus_ActiveAndUser(boolean active, User user): Optional<Subscriptions>
+save(S entity) : <S extends Subscriptions>
}



SubscriptionsController ..> SubscriptionsService: uses >
SubscriptionsService ..> SubscriptionsRepository: uses >
SubscriptionsService ..> PlansRepository: uses >
SubscriptionsService ..> UserRepository: uses >
SubscriptionsService ..> DeviceRepository: uses >
SubscriptionsRepository ..> Subscriptions: < record
SubscriptionsController ..>SubscriptionsViewMapper: uses >
@enduml



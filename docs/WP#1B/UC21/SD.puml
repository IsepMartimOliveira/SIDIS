@startuml
autonumber
autoactivate on

actor "Marketing Director" as Ac
participant ":PlanController" as Ctrl
participant ":PlansService" as Serv
participant ":PlansRepository" as Repo
participant ":SubscriptionsRepository" as SubRepo

activate Ac

Ac -> Ctrl : DELETE /plans?name=

Ctrl -> Serv : int cease(name, getVersionFromIfMatchHeader(ifMatchValue))

Serv -> Repo : Plans plans = findByName_Name(name)
Repo --> Serv : plans
note right
    3. Finds a plan by its name.
    If it doesn't exist, it throws NotFoundException
end note

Serv --> Ctrl : plans

Ctrl -> SubRepo : existsByPlanAndUserNotNull(plans)
SubRepo --> Ctrl : exists
note right
    6. Finds a subscription that has
    the corresponding plan and information in user parameter.
    If it does exist, it throws IllegalArgumentException
end note

Ctrl -> Repo : ceaseByPlan(plans, desiredVersion)
Repo --> Ctrl : count
note right
    8. This function performs a soft deletion
    (remains in database, but is removed from dashboards, etc..)
end note

Ctrl --> Ac : Conflict response if count is 0
Ctrl --> Ac : OK response if count is 1
Ctrl --> Ac : Conflict response if count is greater than 1

@enduml

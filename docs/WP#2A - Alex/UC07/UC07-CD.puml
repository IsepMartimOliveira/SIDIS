@startuml
'https://plantuml.com/class-diagram
hide circle
class SubscriptionsRepository <<interface>>
class UserRepository <<interface>>
class PlansRepository <<interface>>


class Subscriptions {
    -startDate
    -endDate
    -paymentType
    -activeStatus
}



class SubscriptionsViewMapper{
    +toSubscriptionsView(Subscription subscriptions):SubscriptionsView
}
class SubscriptionsController{
    create(final CreateSubscriptionsRequest resource):ResponseEntity<SubscriptionsView>
    }
class SubscriptionsService{
 +create(createSubscriptionsMapper resource):Subscriptions

}

class CreateSubscriptionsMapper{
    +create(User user, Plans plan, CreateSubscriptionsRequest request):Subscriptions
}

interface PlansRepository
{
+findByActive_ActiveAndName_Name(boolean active, String name_name)  : Optional<Plans>
}

interface UserRepository
{
+findById(Long objectId): Optional<User>
}


interface SubscriptionsRepository
{
+findByUser(User user): Optional<Subscriptions>
+save(S entity) : <S extends Subscriptions>
}



SubscriptionsController ..> SubscriptionsService: uses >
SubscriptionsService ..> SubscriptionsRepository: uses >
SubscriptionsService ..> PlansRepository: uses >
SubscriptionsService ..> UserRepository: uses >
SubscriptionsService ..> CreateSubscriptionsMapper: uses >
SubscriptionsRepository ..> Subscriptions: < record

SubscriptionsController ..>SubscriptionsViewMapper: uses >
@enduml


